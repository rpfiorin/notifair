unit uItemInfo;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.StdCtrls,
  FMX.Controls.Presentation, FMX.Layouts, FMX.ListBox, FMX.Edit, Data.DB, Uni;

type
  TFrmItemInfo = class(TForm)
    btnVersion: TButton;
    lblTop: TLabel;
    btnTop: TButton;
    lblTitle: TLabel;
    lblCopy: TLabel;
    lbBg: TListBox;
    btnSave: TButton;
    edtBrand: TEdit;
    edtQtd: TEdit;
    edtDur: TEdit;
    lblBrand: TLabel;
    lblQtd: TLabel;
    lblDur: TLabel;
    edtDesc: TEdit;
    lblDesc: TLabel;
    edtIDitem: TEdit;
    btnDelItem: TButton;

    procedure btnSaveClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure btnDelItemClick(Sender: TObject);

    function isBrandOrNo(Value: String): String;
    function BringBrand(Brand: String): String;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmItemInfo: TFrmItemInfo;

implementation

{$R *.fmx}

uses uItem, uDmData, uAddList, Androidapi.JNI.Toast;

procedure TFrmItemInfo.btnSaveClick(Sender: TObject);
var
  uDqryRfsItem: TUniQuery;
begin
 // Trata se for edicao
 if (ItemControl = 'U') then
 begin
  // Instancia e conecta ao BD
  uDqryRfsItem := TUniQuery.Create(nil);
  uDqryRfsItem.Connection := DmData.uDconn_pg;

 try
  // Executa instrucao
  uDqryRfsItem.SQL.Text := ' UPDATE public.item_lista SET'+
                           ' descricao ='+QuotedStr(edtDesc.Text)+','+
                           ' marca ='+QuotedStr(isBrandOrNo(edtBrand.Text))+','+
                           ' quantidade ='+QuotedStr(edtQtd.Text)+','+
                           ' dur_dias ='+edtDur.Text+' WHERE id ='+edtIDitem.Text;
  uDqryRfsItem.ExecSQL;

   ShowMessage('Item atualizado');
 finally
  uDqryRfsItem.Free;
 end;
 Self.Close;
 end;

 // Trata se for inclusao
 if (ItemControl = 'I') then
  if (edtDesc.Text <> '') and (edtQtd.Text <> '') and (edtDur.Text <> '') then
  begin
  with FrmAddList do
  begin
    // Adiciona registros no ClientDataSet
    cdsItems.Append;

    cdsItemsDescricao.AsString := self.edtDesc.Text;
    cdsItemsMarca.AsString := isBrandOrNo(self.edtBrand.Text);
    cdsItemsQuantidade.AsString := self.edtQtd.Text;
    cdsItemsDuracao.AsInteger := strToInt(Self.edtDur.Text);

    cdsItems.Post;

    // Acumula contador de itens
    Nitems := Nitems+1;
    Androidapi.JNI.Toast.Toast('Item adicionado.');

    // Exibe contador de itens
    lblNitems.Text := IntToStr(Nitems);
    FrmAddList.lblAddedItens.Visible := True;

    // Limpa campos
    edtDesc.Text := '';
    edtBrand.Text := '';
    edtQtd.Text := '';
    edtDur.Text := '';
   end;
 end
 else
  ShowMessage('Preencha todos os campos!');
end;

function TFrmItemInfo.BringBrand(Brand: String): String;
begin
  if (Brand = '') or (Brand = 'NULL') then
   Result := ''
  else
   Result := Brand;
end;

procedure TFrmItemInfo.btnDelItemClick(Sender: TObject);
var
 uDqryDelItem: TUniQuery;
begin
 // Conecta ao BD
 uDqryDelItem := TUniQuery.Create(nil);
 uDqryDelItem.Connection := DmData.uDconn_pg;

  MessageDlg('Confirmar exclusão?', System.UITypes.TMsgDlgType.mtInformation,
  [
   System.UITypes.TMsgDlgBtn.mbYes,
   System.UITypes.TMsgDlgBtn.mbNo
  ], 0,
  procedure(const AResult: System.UITypes.TModalResult)
  begin
   case Aresult of
    mrYES:
    begin
    try
     uDqryDelItem.SQL.Text := ' DELETE FROM public.item_lista'+
                              ' WHERE id ='+edtIDitem.Text;
     uDqryDelItem.ExecSQL;

     ShowMessage('Item excluido');
     Close;
     FrmItem.btnRefreshClick(Sender);
    finally
     // Destroi
     uDqryDelItem.Free;
    end;
    end;
    // Sai
    mrNo:
     Exit;
   end;
  end);
end;

procedure TFrmItemInfo.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  // Desaloca da memoria
  FreeAndNil(FrmItemInfo);
end;

procedure TFrmItemInfo.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
 // Trata acoes
 if (ItemControl = 'I') then
 begin
  if not FrmAddList.cdsItems.IsEmpty then
   FrmAddList.lblNitems.Visible := True;
 end
 else
 begin
   FrmItem.uDqry_ItemsLv.Close;
   FrmItem.uDqry_ItemsLv.Open;
 end;

  // Reseta var
  ItemControl := '';
end;

procedure TFrmItemInfo.FormShow(Sender: TObject);
begin
  if (ItemControl = 'U') then
  begin
    btnDelItem.Visible := True;

    // Popula os campos
    edtIDitem.Text := FrmItem.uDqry_ItemsLvID.AsString;
    edtDesc.Text := FrmItem.uDqry_ItemsLvDescricao.AsString;
    edtBrand.Text := BringBrand(FrmItem.uDqry_ItemsLvMarca.AsString);
    edtQtd.Text := FrmItem.uDqry_ItemsLvQuantidade.AsString;
    edtDur.Text := FrmItem.uDqry_ItemsLvDur_dias.AsString;

    // Configura controles
    lblTop.Text := ' DETALHES DO ITEM';
    btnSave.Text := 'Atualizar';
  end
  else
  begin
    lblTop.Text := ' INFORMAÇÕES DO ITEM';
    btnSave.Text := 'Adicionar';
  end;
  //
end;

function TFrmItemInfo.isBrandOrNo(Value: String): String;
begin
  // Trata conteudo do campo "Marca"
  if (Value = '') or (Value = 'Marca') then
   Result := 'NULL'
  else
   Result := Value;
end;

end.
