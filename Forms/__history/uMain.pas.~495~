unit uMain;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
  FMX.StdCtrls, FMX.Controls.Presentation, System.Rtti, FMX.Layouts, FMX.Grid,
  Data.DB, MemDS, DBAccess, Uni, Data.Bind.EngExt, Fmx.Bind.DBEngExt, Fmx.Bind.Grid,
  System.Bindings.Outputs, Fmx.Bind.Editors, Data.Bind.Components, Data.Bind.Grid,
  Data.Bind.DBScope, DateUtils;

type
  TFrmMain = class(TForm)
    lblVersion: TLabel;
    btnBg: TButton;
    imgLogo: TImage;
    lblAdd: TLabel;
    btnAddList: TButton;
    lblRefresh: TLabel;
    btnDetailList: TButton;
    pnlBottom: TPanel;
    gd_Lists: TGrid;
    uDqry_Lists: TUniQuery;
    bsDB_Lists: TBindSourceDB;
    bl_Lists: TBindingsList;
    LinkGridToDataSourceBindSourceDB1: TLinkGridToDataSource;
    btnVersion: TButton;
    btnWarning: TButton;
    uDqryUdtFlistDt: TUniQuery;
    uDqryUdtMnhList: TUniQuery;
    uDqry_Listsid: TIntegerField;
    uDqry_Listscategoria: TStringField;
    uDqry_Listsmes: TSmallintField;
    uDqry_Listsdt_fim: TDateField;

    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure btnDetailListClick(Sender: TObject);
    procedure btnAddListClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmMain: TFrmMain;

implementation

{$R *.fmx}

uses uDmData, uItem, uAddList;

procedure TFrmMain.btnAddListClick(Sender: TObject);
begin
  // Chama tela de cadastros
  FrmAddList := TFrmAddList.Create(self);
  FrmAddList.Show;
end;

procedure TFrmMain.btnDetailListClick(Sender: TObject);
begin
  // Chama tela de detalhes da lista
  FrmItem := TFrmItem.Create(self);
  FrmItem.Show;
end;

procedure TFrmMain.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  // Desaloca memoria
  FreeAndNil(DmData);
  FreeAndNil(FrmMain);
end;

procedure TFrmMain.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
  // Desconecta do BD
  uDqry_Lists.Active := False;
  DmData.uDconn_pg.Disconnect;
end;

procedure TFrmMain.FormCreate(Sender: TObject);
var
  uDqryVsn: TUniQuery;
  uDqryMnh: TUniQuery;
begin
 try
  // Conecta ao BD
  uDqryVsn := TUniQuery.Create(nil);
  uDqryVsn.Connection := DmData.uDconn_pg;
  uDqryMnh := TUniQuery.Create(nil);
  uDqryMnh.Connection := DmData.uDconn_pg;

  uDqryVsn.SQL.Text := ' SELECT versao FROM'+
                       ' public.sistema WHERE'+
                       ' nome = ''NotiFair'' ';

  // Verifica mes e atualiza se necessario
  uDqryMnh.SQL.Text := ' SELECT id FROM'+
                       ' public.lista_comp'+
                       ' WHERE mes <>'+
                       ' Extract(''month'' '+
                       ' FROM now())';

  // Busca versao e mes atual
  uDqryVsn.Open;
  uDqryMnh.Open;

   // Exibe
   lblVersion.Text := ' NOTIFAIR LISTAS DE MERCADO -'+
                      ' V'+uDqryVsn.Fields[0].AsString;

  if not (uDqryMnh.IsEmpty) then
   uDqryUdtMnhList.ExecSQL;

 finally
  uDqryVsn.Free;
  uDqryMnh.Free;
 end;
end;

procedure TFrmMain.FormShow(Sender: TObject);
var
  uDqryAlertFlistDt: TUniQuery;
  uDqryDny: TUniQuery;
  Dny: Boolean;

  Fdate: TDate;
begin
 try
  // Conecta ao BD
  uDqryDny := TUniQuery.Create(nil);
  uDqryDny.Connection := DmData.uDconn_pg;

  uDqryAlertFlistDt := TUniQuery.Create(nil);
  uDqryAlertFlistDt.Connection := DmData.uDconn_pg;

  // Controla disponibildade
  uDqryDny.SQL.Text := ' SELECT is_available FROM'+
                       ' public.sistema WHERE'+
                       ' nome = ''NotiFair'' ';
  uDqryDny.Open;
  Dny := uDqryDny.Fields[0].AsBoolean;

  // Testa
  if not Dny then
  begin
    btnWarning.Visible := True;
    btnAddList.Enabled := False;
    btnDetailList.Enabled := False;

    uDqry_Lists.Active := False;
  end
  else
  begin
   // Exibe listas cadastradas
   uDqry_Lists.Active := True;

   // Verifica prazo de validade das listas
   uDqryAlertFlistDt.SQL.Text := ' SELECT categoria, dt_fim'+
                                 ' FROM public.lista_comp'+
                                 ' WHERE dt_fim <='+QuotedStr(
                                 FormatDateTime('YYYY-MM-DD',Date));
   uDqryAlertFlistDt.Open;

    if (uDqryAlertFlistDt.IsEmpty = False) then
    begin
     ShowMessage('Já faz um tempo que você não confere o NotiFair.'+#13+
                 'O prazo das listas serão atualizados de acordo com o tipo.'
                );

     // Atualiza validade de acordo com cada tipo
     uDqryAlertFlistDt.First;
     while not uDqryAlertFlistDt.Eof do
     begin
      if (uDqryAlertFlistDt.Fields[0].AsString = 'Semanal') then
      begin
      Fdate := Date+7;

       uDqryUdtFlistDt.SQL.Text := ' UPDATE public.lista_comp'+
                                   ' SET dt_fim ='+QuotedStr(
                                   FormatDateTime('YYYY-MM-DD',Fdate))+
                                   ' WHERE categoria = '+QuotedStr(
                                   uDqryAlertFlistDt.Fields[0].AsString);
       uDqryUdtFlistDt.ExecSQL;
      end;
      if (uDqryAlertFlistDt.Fields[0].AsString = 'Quinzenal') then
      begin
      Fdate := Date+15;

       uDqryUdtFlistDt.SQL.Text := ' UPDATE public.lista_comp'+
                                   ' SET dt_fim ='+QuotedStr(
                                   FormatDateTime('YYYY-MM-DD',Fdate))+
                                   ' WHERE categoria = Quinzenal ';
       uDqryUdtFlistDt.ExecSQL;
      end;
      if (uDqryAlertFlistDt.Fields[0].AsString = 'Mensal') then
      begin
      Fdate := Date+30;

       uDqryUdtFlistDt.SQL.Text := ' UPDATE public.lista_comp'+
                                   ' SET dt_fim ='+QuotedStr(
                                   FormatDateTime('YYYY-MM-DD',Fdate));
                                   ' WHERE categoria = Mensal ';
       uDqryUdtFlistDt.ExecSQL;
      end;

      uDqryAlertFlistDt.Next;
     end;
    end;

  end;
 finally
   uDqryDny.Free;
   uDqryUdtFlistDt.Free;
 end;
end;

end.
